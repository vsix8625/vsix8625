---@diagnostic disable: undefined-global
--- Copyright (C) Panayiotis Panteli "vsix" Oct 2024
----------------------------------------------------------------------------------------------------
vim.cmd("hi clear")
vim.g.colors_name = "zeus"
local hi = function(name, val)
  val.cterm = val.cterm or {}
  vim.api.nvim_set_hl(0, name, val)
end

local background = "#111111"
local foreground = "#5995b4"

local comment = "#39434f"
local error_fg = "#000000"
local error_bg = "#ff3500"

hi("Normal", { bg = background, fg = foreground })
hi("Cursor", { bg = "#11f4b1" })
hi("String", { fg = "#ffffff" })
hi("Character", { link = "Special" })
hi("Comment", { fg = comment })
hi("Number", { fg = "#B66149" })
hi("Float", { link = "Number" })
hi("Boolean", { fg = "#A45B5E", bold = true })
hi("Constant", { fg = "#008888", bold = true })
hi("Identifier", { fg = "#00af74" }) -- struct names , c variables
hi("Keyword", { fg = "#004444", bold = true })
hi("Operator", { fg = "#a9c5f4" })
hi("Special", { fg = "#0584D2", bold = true })
hi("Delimiter", { link = "Operator" })
hi("Type", { fg = "#0074af", bold = true })
hi("Function", { fg = "#16406D", bold = true })
hi("Label", { link = "Statement" })
hi("MsgArea", { fg = "#22aaff" })
hi("Search", { bg = "#00ffff", fg = "#ffffff" })
hi("Substitute", { bg = "#ffffff", fg = "#000000" })
hi("IncSearch", { bg = "#ffffff", fg = "#000000" })
hi("CurSearch", { link = "IncSearch" })
hi("Visual", { fg = "#000000", bg = "#00ffff", bold = true })
hi("hlsearch", { link = "Visual" })
hi("Macro", { fg = "#70f4ff" })
hi("Added", { fg = "#777777" })
hi("Changed", { fg = "#999999" })
hi("Removed", { fg = "#F11122" }) 
hi("yanking", { bg = "#119599" })
hi("@lsp.type.class.c", { link = "Type" })
hi("@variable", { fg = "#5995f4"})

hi("Title", { fg = "#118599" })
hi("TelescopeBorder", { fg = foreground, bg = background })
hi("TelescopeMatching", { link = "Boolean" })
hi("Pmenu", { bg = "#454140", fg = "#ffffff" })
hi("CursorLine", { bg = "#1f1f1f", })
hi("CursorLineNr", { bg = background, fg = "#babaff", bold = true })
hi("LineNr", { bg = background, fg = "#29332f" })

hi("cTypedef", { link = "Identifier" })
hi("cStructure", { link = "Special" })
hi("cDefine", { link = "Boolean" })

--hi("LineNrAbove", {})
--hi("LineNrBelow", {})

hi("PreProc", { fg = "#4f7f8f" })
hi("Typedef", { link = "Special" })
hi("@string.special", { link = "Special" })
hi("Statement", { link = "Keyword" })
hi("Structure", { link = "@variable" })


hi("PmenuSel", { link = "Visual" })
hi("PmenuExtra", { link = "Visual" })
hi("PmenuExtraSel", { link = "PmenuSel" })
hi("PmenuKind", { link = "Visual" })
hi("PmenuKindSel", { link = "PmenuSel" })
hi("PmenuSbar", { link = "CursorLine" })
hi("PmenuThumb", { link = "Boolean" })

--error msgs and warnings
hi("Underlined", { underline = true, fg = error_bg })
hi("DiagnosticError", { bg = error_bg, fg = error_fg, bold = true })
hi("Error", { bg = "#9F0e21", fg = "#0f0f0f" })
hi("ErrorMsg", { bg = "#9F0e21", fg = "#0f0f0f", bold = true })
hi("WarningMsg", { bg = "#ef6400", fg = "#0f0f0f", bold = true })

--TODO:some to do
hi("Todo", { fg = "#ff0000" })
hi("CursorColumn", { bg = "#9f1f1f" })
hi("CursorIM", { link = "Cursor" })
hi("CursorLineFold", { link = "FoldColumn" })
hi("CursorLineSign", { link = "SignColumn" })

hi("NormalFloat", { link = "Normal" })
hi("FloatBorder", { link = "NormalFloat" })
hi("FloatFooter", { link = "Boolean" })
hi("FloatShadow", { link = "NormalFloat" })
hi("FloatShadowThrough", { link = "FloatShadow" })
hi("FloatTitle", { link = "Title" })
hi("WinSeparator", { link = "Identifier" })
hi("NormalNC", {})
hi("RedrawDebugNormal", { reverse = true })
hi("TelescopeNormal", { link = "Normal" })
hi("TelescopePreviewNormal", { link = "Normal" })
hi("TelescopePromptNormal", { link = "Normal" })
hi("TelescopeResultsNormal", { link = "Normal" })

hi("NvimInvalidString", { link = "Error" })
hi("NvimInvalidStringBody", { link = "Underlined" })
hi("NvimInvalidStringQuote", { link = "Underlined" })
hi("NvimInvalidStringSpecial", { link = "Underlined" })
hi("NvimString", { link = "String" })
hi("NvimStringBody", { link = "NvimString" })
hi("NvimStringQuote", { link = "NvimString" })
hi("NvimStringSpecial", { link = "@string.special" })

hi("NvimInvalidNumber", { link = "Error" })
hi("NvimInvalidNumberPrefix", { link = "Error" })
hi("NvimNumber", { link = "Number" })
hi("NvimNumberPrefix", { link = "Boolean" })
hi("TelescopeResultsNumber", { link = "Number" })

hi("ColorColumn", {})
hi("Conceal", {})
hi("Conditional", { link = "Statement" })
hi("Debug", {})
hi("Define", { link = "PreProc" })
hi("DiagnosticDeprecated", {})
hi("DiagnosticFloatingError", { link = "Error" })
hi("DiagnosticFloatingHint", { link = "WarningMsg" })
hi("DiagnosticFloatingInfo", { link = "Pmenu" })
hi("DiagnosticFloatingOk", { link = "Visual" })
hi("DiagnosticFloatingWarn", { link = "WarningMsg" })
hi("DiagnosticHint", { link = "WarningMsg" })
hi("DiagnosticInfo", { link = "Pmenu" })
hi("DiagnosticOk", { link = "Visual" })
hi("DiagnosticSignError", { link = "Error" })
hi("DiagnosticSignHint", { link = "Boolean" })
hi("DiagnosticSignInfo", { link = "Comment" })
hi("DiagnosticSignOk", { link = "Normal" })
hi("DiagnosticSignWarn", { link = "WarningMsg" })
hi("DiagnosticUnderlineError", { link = "Underlined" })
hi("DiagnosticUnderlineHint", {})
hi("DiagnosticUnderlineInfo", {})
hi("DiagnosticUnderlineOk", {})
hi("DiagnosticUnderlineWarn", {})
hi("DiagnosticUnnecessary", { link = "Normal" })
hi("DiagnosticVirtualTextError", { link = "Error" })
hi("DiagnosticVirtualTextHint", { link = "Comment" })
hi("DiagnosticVirtualTextInfo", { link = "Comment" })
hi("DiagnosticVirtualTextOk", { link = "Normal" })
hi("DiagnosticVirtualTextWarn", { link = "WarningMsg" })
hi("DiagnosticWarn", { link = "WarningMsg" })
hi("DiffAdd", { link = "Added" })
hi("DiffChange", { link = "Changed" })
hi("DiffDelete", { link = "Removed" })
hi("DiffText", { link = "Boolean" })
hi("Directory", { link = "Title" })
hi("EndOfBuffer", { link = "Normal" })
hi("ErrorMsg", { link = "Error" })
hi("Exception", { link = "Boolean" })
hi("FoldColumn", {})
hi("Folded", {})
hi("Ignore", {})
hi("Include", { link = "PreProc" })
hi("LspCodeLens", {})
hi("LspCodeLensSeparator", { link = "CursorLine" })
hi("LspInfoBorder", { link = "Identifier" })
hi("LspInfoFiletype", {})
hi("LspInfoList", {})
hi("LspInfoTip", {})
hi("LspInfoTitle", { link = "Title" })
hi("LspInlayHint", {})
hi("LspReferenceRead", {})
hi("LspReferenceText", {})
hi("LspReferenceWrite", {})
hi("LspSignatureActiveParameter", {})
hi("MatchParen", { link = "Special" })
hi("ModeMsg", { link = "ModeMsg" })
hi("MoreMsg", { link = "Special" })
hi("MsgSeparator", { link = "CursorLine" })
hi("NonText", {})
hi("NvimAnd", {})
hi("NvimArrow", {})
hi("NvimAssignment", {})
hi("NvimAssignmentWithAddition", {})
hi("NvimAssignmentWithConcatenation", {})
hi("NvimAssignmentWithSubtraction", {})
hi("NvimAugmentedAssignment", {})
hi("NvimBinaryMinus", {})
hi("NvimBinaryOperator", { link = "Operator" })
hi("NvimBinaryPlus", {})
hi("NvimCallingParenthesis", { link = "Operator" })
hi("NvimColon", {})
hi("NvimComma", {})
hi("NvimComparison", {})
hi("NvimComparisonModifier", {})
hi("NvimConcat", {})
hi("NvimConcatOrSubscript", {})
hi("NvimContainer", {})
hi("NvimCurly", {})
hi("NvimDict", {})
hi("NvimDivision", {})
hi("NvimDoubleQuote", {})
hi("NvimDoubleQuotedBody", {})
hi("NvimDoubleQuotedEscape", {})
hi("NvimDoubleQuotedUnknownEscape", {})
hi("NvimEnvironmentName", {})
hi("NvimEnvironmentSigil", {})
hi("NvimFigureBrace", {})
hi("NvimFloat", { link = "number" })
hi("NvimIdentifier", { link = "Identifier" })
hi("NvimIdentifierKey", {})
hi("NvimIdentifierName", {})
hi("NvimIdentifierScope", {})
hi("NvimIdentifierScopeDelimiter", {})
hi("NvimInternalError", {})
hi("NvimInvalid", {})
hi("NvimInvalidAnd", {})
hi("NvimInvalidArrow", {})
hi("NvimInvalidAssignment", {})
hi("NvimInvalidAssignmentWithAddition", {})
hi("NvimInvalidAssignmentWithConcatenation", {})
hi("NvimInvalidAssignmentWithSubtraction", {})
hi("NvimInvalidAugmentedAssignment", {})
hi("NvimInvalidBinaryMinus", {})
hi("NvimInvalidBinaryOperator", { link = "Error" })
hi("NvimInvalidBinaryPlus", {})
hi("NvimInvalidCallingParenthesis", {})
hi("NvimInvalidColon", {})
hi("NvimInvalidComma", {})
hi("NvimInvalidComparison", {})
hi("NvimInvalidComparisonModifier", {})
hi("NvimInvalidConcat", {})
hi("NvimInvalidConcatOrSubscript", {})
hi("NvimInvalidContainer", {})
hi("NvimInvalidCurly", {})
hi("NvimInvalidDelimiter", {})
hi("NvimInvalidDict", {})
hi("NvimInvalidDivision", {})
hi("NvimInvalidDoubleQuote", {})
hi("NvimInvalidDoubleQuotedBody", {})
hi("NvimInvalidDoubleQuotedEscape", {})
hi("NvimInvalidDoubleQuotedUnknownEscape", {})
hi("NvimInvalidEnvironmentName", {})
hi("NvimInvalidEnvironmentSigil", {})
hi("NvimInvalidFigureBrace", {})
hi("NvimInvalidFloat", {})
hi("NvimInvalidIdentifier", {})
hi("NvimInvalidIdentifierKey", {})
hi("NvimInvalidIdentifierName", {})
hi("NvimInvalidIdentifierScope", {})
hi("NvimInvalidIdentifierScopeDelimiter", {})
hi("NvimInvalidLambda", {})
hi("NvimInvalidList", {})
hi("NvimInvalidMod", {})
hi("NvimInvalidMultiplication", {})
hi("NvimInvalidNestingParenthesis", {})
hi("NvimInvalidNot", {})
hi("NvimInvalidOperator", { link = "Error" })
hi("NvimInvalidOptionName", {})
hi("NvimInvalidOptionScope", {})
hi("NvimInvalidOptionScopeDelimiter", {})
hi("NvimInvalidOptionSigil", {})
hi("NvimInvalidOr", {})
hi("NvimInvalidParenthesis", {})
hi("NvimInvalidPlainAssignment", {})
hi("NvimInvalidRegister", {})
hi("NvimInvalidSingleQuote", {})
hi("NvimInvalidSingleQuotedBody", {})
hi("NvimInvalidSingleQuotedQuote", {})
hi("NvimInvalidSingleQuotedUnknownEscape", {})
hi("NvimInvalidSpacing", {})
hi("NvimInvalidSubscript", {})
hi("NvimInvalidSubscriptBracket", {})
hi("NvimInvalidSubscriptColon", {})
hi("NvimInvalidTernary", {})
hi("NvimInvalidTernaryColon", {})
hi("NvimInvalidUnaryMinus", {})
hi("NvimInvalidUnaryOperator", { link = "Error" })
hi("NvimInvalidUnaryPlus", {})
hi("NvimInvalidValue", {})
hi("NvimLambda", {})
hi("NvimList", {})
hi("NvimMod", {})
hi("NvimMultiplication", {})
hi("NvimNestingParenthesis", {})
hi("NvimNot", {})
hi("NvimOperator", { link = "Operator" })
hi("NvimOptionName", {})
hi("NvimOptionScope", {})
hi("NvimOptionScopeDelimiter", {})
hi("NvimOptionSigil", {})
hi("NvimOr", {})
hi("NvimParenthesis", { link = "@punctuation.bracket" })
hi("NvimPlainAssignment", {})
hi("NvimRegister", {})
hi("NvimSingleQuote", {})
hi("NvimSingleQuotedBody", {})
hi("NvimSingleQuotedQuote", {})
hi("NvimSingleQuotedUnknownEscape", {})
hi("NvimSpacing", {})
hi("NvimSubscript", {})
hi("NvimSubscriptBracket", {})
hi("NvimSubscriptColon", {})
hi("NvimTernary", {})
hi("NvimTernaryColon", {})
hi("NvimUnaryMinus", {})
hi("NvimUnaryOperator", { link = "Operator" })
hi("NvimUnaryPlus", {})
hi("PreCondit", { link = "PreProc" })
hi("Question", {})
hi("QuickFixLine", { link = "Special" })
hi("RedrawDebugClear", {})
hi("RedrawDebugComposed", {})
hi("RedrawDebugRecompose", {})
hi("Repeat", { link = "Special" })
hi("SignColumn", { bg = background })
hi("SnippetTabstop", {})
hi("SpecialChar", { link = "Special" })
hi("SpecialComment", { link = "Special" })
hi("SpecialKey", { link = "Special" })
hi("SpellBad", { undercurl = true, fg = comment })
hi("SpellCap", { link = "Comment" })
hi("SpellLocal", { link = "Comment" })
hi("SpellRare", { link = "Comment" })
hi("StatusLine", {})
hi("StatusLineNC", {})
hi("StorageClass", { link = "Keyword" })
hi("TSPlaygroundFocus", { link = "Type" })
hi("TSPlaygroundLang", { link = "Boolean" })
hi("TSQueryLinterError", { link = "Error" })
hi("TabLine", { link = "Normal" })
hi("TabLineFill", { link = "TabLine" })
hi("TabLineSel", { reverse = true })
hi("Tag", { link = "Keyword" })
hi("@tag.xlm", { link = "Keyword" })
hi("@tag.attribute.xlm", { link = "Keyword" })

hi("TelescopeMultiIcon", { link = "Boolean" })
hi("TelescopeMultiSelection", { link = "Boolean" })
hi("TelescopePreviewBlock", { link = "Boolean" })
hi("TelescopePreviewBorder", { link = "Identifier" })
hi("TelescopePreviewCharDev", { link = "Identifier" })
hi("TelescopePreviewDate", { link = "Boolean" })
hi("TelescopePreviewDirectory", { link = "Special" })
hi("TelescopePreviewExecute", { link = "Identifier1679AB" })
hi("TelescopePreviewGroup", { link = "Boolean" })
hi("TelescopePreviewHyphen", { link = "Identifier" })
hi("TelescopePreviewLine", { link = "Normal" })
hi("TelescopePreviewLink", { link = "Number" })
hi("TelescopePreviewMatch", { link = "Boolean" })
hi("TelescopePreviewMessage", { link = "WarningMsg" })
hi("TelescopePreviewMessageFillchar", { link = "Error" })
hi("TelescopePreviewPipe", {})
hi("TelescopePreviewRead", { link = "Normal" })
hi("TelescopePreviewSize", {})
hi("TelescopePreviewSocket", {})
hi("TelescopePreviewSticky", {})
hi("TelescopePreviewTitle", { link = "Title" })
hi("TelescopePreviewUser", {})
hi("TelescopePreviewWrite", {})
hi("TelescopePromptBorder", { link = "Identifier" })
hi("TelescopePromptCounter", { link = "Number" })
hi("TelescopePromptPrefix", { link = "Number" })
hi("TelescopePromptTitle", { link = "Title" })
hi("TelescopeResultsBorder", { link = "Normal" })
hi("TelescopeResultsClass", { link = "Class" })
hi("TelescopeResultsComment", { link = "Comment" })
hi("TelescopeResultsConstant", { link = "Constant" })
hi("TelescopeResultsDiffAdd", { link = "Added" })
hi("TelescopeResultsDiffChange", { link = "Changed" })
hi("TelescopeResultsDiffDelete", { link = "Removed" })
hi("TelescopeResultsDiffUntracked", { link = "Added" })
hi("TelescopeResultsField", { link = "Visual" })
hi("TelescopeResultsFunction", { link = "Function" })
hi("TelescopeResultsIdentifier", { link = "Identifier" })
hi("TelescopeResultsLineNr", {})
hi("TelescopeResultsMethod", { link = "Boolean" })
hi("TelescopeResultsOperator", { link = "Operator" })
hi("TelescopeResultsSpecialComment", { link = "Special" })
hi("TelescopeResultsStruct", { link = "Structure" })
hi("TelescopeResultsTitle", { link = "Title" })
hi("TelescopeResultsVariable", { link = "@variable" })
hi("TelescopeSelection", { link = "CursorLine" })
hi("TelescopeSelectionCaret", { link = "CursorLineNr" })
hi("TelescopeTitle", { link = "Title" })

hi("jsonstring", { link = "String" })
hi("jsonStringMatch", { link = "Special" })
hi("jsonfold", { link = "String" })

hi("VertSplit", { link = "Normal" })
hi("Whitespace", { fg = "none", bg = "none" })
hi("WildMenu", { link = "Pmenu" })
